// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MonsterHunterBE.Data;

#nullable disable

namespace MonsterHunterBE.Migrations
{
    [DbContext(typeof(MonsterHunterContex))]
    partial class MonsterHunterContexModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MonsterHunterBE.Model.Monster.Monster", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrls")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Monsters");
                });

            modelBuilder.Entity("MonsterHunterBE.Model.MonsterDrop", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("DropRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("MonsterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MonsterId");

                    b.ToTable("MonsterDrops");
                });

            modelBuilder.Entity("MonsterHunterBE.Model.MonsterWeakness", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("MonsterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("WeaknessPerc")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("MonsterId");

                    b.ToTable("MonsterWeaknesses");
                });

            modelBuilder.Entity("MonsterHunterBE.Model.MonsterDrop", b =>
                {
                    b.HasOne("MonsterHunterBE.Model.Monster.Monster", null)
                        .WithMany("Drop")
                        .HasForeignKey("MonsterId");
                });

            modelBuilder.Entity("MonsterHunterBE.Model.MonsterWeakness", b =>
                {
                    b.HasOne("MonsterHunterBE.Model.Monster.Monster", null)
                        .WithMany("Weakness")
                        .HasForeignKey("MonsterId");
                });

            modelBuilder.Entity("MonsterHunterBE.Model.Monster.Monster", b =>
                {
                    b.Navigation("Drop");

                    b.Navigation("Weakness");
                });
#pragma warning restore 612, 618
        }
    }
}
